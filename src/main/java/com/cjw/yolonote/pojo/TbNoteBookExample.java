package com.cjw.yolonote.pojo;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TbNoteBookExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_note_book
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_note_book
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_note_book
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_note_book
     *
     * @mbggenerated
     */
    public TbNoteBookExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_note_book
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_note_book
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_note_book
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_note_book
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_note_book
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_note_book
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_note_book
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_note_book
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_note_book
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_note_book
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_note_book
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUseridIsNull() {
            addCriterion("userId is null");
            return (Criteria) this;
        }

        public Criteria andUseridIsNotNull() {
            addCriterion("userId is not null");
            return (Criteria) this;
        }

        public Criteria andUseridEqualTo(Integer value) {
            addCriterion("userId =", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotEqualTo(Integer value) {
            addCriterion("userId <>", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThan(Integer value) {
            addCriterion("userId >", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridGreaterThanOrEqualTo(Integer value) {
            addCriterion("userId >=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThan(Integer value) {
            addCriterion("userId <", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridLessThanOrEqualTo(Integer value) {
            addCriterion("userId <=", value, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridIn(List<Integer> values) {
            addCriterion("userId in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotIn(List<Integer> values) {
            addCriterion("userId not in", values, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridBetween(Integer value1, Integer value2) {
            addCriterion("userId between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andUseridNotBetween(Integer value1, Integer value2) {
            addCriterion("userId not between", value1, value2, "userid");
            return (Criteria) this;
        }

        public Criteria andNotebookcoverIsNull() {
            addCriterion("noteBookCover is null");
            return (Criteria) this;
        }

        public Criteria andNotebookcoverIsNotNull() {
            addCriterion("noteBookCover is not null");
            return (Criteria) this;
        }

        public Criteria andNotebookcoverEqualTo(String value) {
            addCriterion("noteBookCover =", value, "notebookcover");
            return (Criteria) this;
        }

        public Criteria andNotebookcoverNotEqualTo(String value) {
            addCriterion("noteBookCover <>", value, "notebookcover");
            return (Criteria) this;
        }

        public Criteria andNotebookcoverGreaterThan(String value) {
            addCriterion("noteBookCover >", value, "notebookcover");
            return (Criteria) this;
        }

        public Criteria andNotebookcoverGreaterThanOrEqualTo(String value) {
            addCriterion("noteBookCover >=", value, "notebookcover");
            return (Criteria) this;
        }

        public Criteria andNotebookcoverLessThan(String value) {
            addCriterion("noteBookCover <", value, "notebookcover");
            return (Criteria) this;
        }

        public Criteria andNotebookcoverLessThanOrEqualTo(String value) {
            addCriterion("noteBookCover <=", value, "notebookcover");
            return (Criteria) this;
        }

        public Criteria andNotebookcoverLike(String value) {
            addCriterion("noteBookCover like", value, "notebookcover");
            return (Criteria) this;
        }

        public Criteria andNotebookcoverNotLike(String value) {
            addCriterion("noteBookCover not like", value, "notebookcover");
            return (Criteria) this;
        }

        public Criteria andNotebookcoverIn(List<String> values) {
            addCriterion("noteBookCover in", values, "notebookcover");
            return (Criteria) this;
        }

        public Criteria andNotebookcoverNotIn(List<String> values) {
            addCriterion("noteBookCover not in", values, "notebookcover");
            return (Criteria) this;
        }

        public Criteria andNotebookcoverBetween(String value1, String value2) {
            addCriterion("noteBookCover between", value1, value2, "notebookcover");
            return (Criteria) this;
        }

        public Criteria andNotebookcoverNotBetween(String value1, String value2) {
            addCriterion("noteBookCover not between", value1, value2, "notebookcover");
            return (Criteria) this;
        }

        public Criteria andNotebooktitleIsNull() {
            addCriterion("noteBookTitle is null");
            return (Criteria) this;
        }

        public Criteria andNotebooktitleIsNotNull() {
            addCriterion("noteBookTitle is not null");
            return (Criteria) this;
        }

        public Criteria andNotebooktitleEqualTo(String value) {
            addCriterion("noteBookTitle =", value, "notebooktitle");
            return (Criteria) this;
        }

        public Criteria andNotebooktitleNotEqualTo(String value) {
            addCriterion("noteBookTitle <>", value, "notebooktitle");
            return (Criteria) this;
        }

        public Criteria andNotebooktitleGreaterThan(String value) {
            addCriterion("noteBookTitle >", value, "notebooktitle");
            return (Criteria) this;
        }

        public Criteria andNotebooktitleGreaterThanOrEqualTo(String value) {
            addCriterion("noteBookTitle >=", value, "notebooktitle");
            return (Criteria) this;
        }

        public Criteria andNotebooktitleLessThan(String value) {
            addCriterion("noteBookTitle <", value, "notebooktitle");
            return (Criteria) this;
        }

        public Criteria andNotebooktitleLessThanOrEqualTo(String value) {
            addCriterion("noteBookTitle <=", value, "notebooktitle");
            return (Criteria) this;
        }

        public Criteria andNotebooktitleLike(String value) {
            addCriterion("noteBookTitle like", value, "notebooktitle");
            return (Criteria) this;
        }

        public Criteria andNotebooktitleNotLike(String value) {
            addCriterion("noteBookTitle not like", value, "notebooktitle");
            return (Criteria) this;
        }

        public Criteria andNotebooktitleIn(List<String> values) {
            addCriterion("noteBookTitle in", values, "notebooktitle");
            return (Criteria) this;
        }

        public Criteria andNotebooktitleNotIn(List<String> values) {
            addCriterion("noteBookTitle not in", values, "notebooktitle");
            return (Criteria) this;
        }

        public Criteria andNotebooktitleBetween(String value1, String value2) {
            addCriterion("noteBookTitle between", value1, value2, "notebooktitle");
            return (Criteria) this;
        }

        public Criteria andNotebooktitleNotBetween(String value1, String value2) {
            addCriterion("noteBookTitle not between", value1, value2, "notebooktitle");
            return (Criteria) this;
        }

        public Criteria andNotebookflagIsNull() {
            addCriterion("noteBookFlag is null");
            return (Criteria) this;
        }

        public Criteria andNotebookflagIsNotNull() {
            addCriterion("noteBookFlag is not null");
            return (Criteria) this;
        }

        public Criteria andNotebookflagEqualTo(Integer value) {
            addCriterion("noteBookFlag =", value, "notebookflag");
            return (Criteria) this;
        }

        public Criteria andNotebookflagNotEqualTo(Integer value) {
            addCriterion("noteBookFlag <>", value, "notebookflag");
            return (Criteria) this;
        }

        public Criteria andNotebookflagGreaterThan(Integer value) {
            addCriterion("noteBookFlag >", value, "notebookflag");
            return (Criteria) this;
        }

        public Criteria andNotebookflagGreaterThanOrEqualTo(Integer value) {
            addCriterion("noteBookFlag >=", value, "notebookflag");
            return (Criteria) this;
        }

        public Criteria andNotebookflagLessThan(Integer value) {
            addCriterion("noteBookFlag <", value, "notebookflag");
            return (Criteria) this;
        }

        public Criteria andNotebookflagLessThanOrEqualTo(Integer value) {
            addCriterion("noteBookFlag <=", value, "notebookflag");
            return (Criteria) this;
        }

        public Criteria andNotebookflagIn(List<Integer> values) {
            addCriterion("noteBookFlag in", values, "notebookflag");
            return (Criteria) this;
        }

        public Criteria andNotebookflagNotIn(List<Integer> values) {
            addCriterion("noteBookFlag not in", values, "notebookflag");
            return (Criteria) this;
        }

        public Criteria andNotebookflagBetween(Integer value1, Integer value2) {
            addCriterion("noteBookFlag between", value1, value2, "notebookflag");
            return (Criteria) this;
        }

        public Criteria andNotebookflagNotBetween(Integer value1, Integer value2) {
            addCriterion("noteBookFlag not between", value1, value2, "notebookflag");
            return (Criteria) this;
        }

        public Criteria andNotestarIsNull() {
            addCriterion("noteStar is null");
            return (Criteria) this;
        }

        public Criteria andNotestarIsNotNull() {
            addCriterion("noteStar is not null");
            return (Criteria) this;
        }

        public Criteria andNotestarEqualTo(Integer value) {
            addCriterion("noteStar =", value, "notestar");
            return (Criteria) this;
        }

        public Criteria andNotestarNotEqualTo(Integer value) {
            addCriterion("noteStar <>", value, "notestar");
            return (Criteria) this;
        }

        public Criteria andNotestarGreaterThan(Integer value) {
            addCriterion("noteStar >", value, "notestar");
            return (Criteria) this;
        }

        public Criteria andNotestarGreaterThanOrEqualTo(Integer value) {
            addCriterion("noteStar >=", value, "notestar");
            return (Criteria) this;
        }

        public Criteria andNotestarLessThan(Integer value) {
            addCriterion("noteStar <", value, "notestar");
            return (Criteria) this;
        }

        public Criteria andNotestarLessThanOrEqualTo(Integer value) {
            addCriterion("noteStar <=", value, "notestar");
            return (Criteria) this;
        }

        public Criteria andNotestarIn(List<Integer> values) {
            addCriterion("noteStar in", values, "notestar");
            return (Criteria) this;
        }

        public Criteria andNotestarNotIn(List<Integer> values) {
            addCriterion("noteStar not in", values, "notestar");
            return (Criteria) this;
        }

        public Criteria andNotestarBetween(Integer value1, Integer value2) {
            addCriterion("noteStar between", value1, value2, "notestar");
            return (Criteria) this;
        }

        public Criteria andNotestarNotBetween(Integer value1, Integer value2) {
            addCriterion("noteStar not between", value1, value2, "notestar");
            return (Criteria) this;
        }

        public Criteria andAvailableflagIsNull() {
            addCriterion("availableFlag is null");
            return (Criteria) this;
        }

        public Criteria andAvailableflagIsNotNull() {
            addCriterion("availableFlag is not null");
            return (Criteria) this;
        }

        public Criteria andAvailableflagEqualTo(Integer value) {
            addCriterion("availableFlag =", value, "availableflag");
            return (Criteria) this;
        }

        public Criteria andAvailableflagNotEqualTo(Integer value) {
            addCriterion("availableFlag <>", value, "availableflag");
            return (Criteria) this;
        }

        public Criteria andAvailableflagGreaterThan(Integer value) {
            addCriterion("availableFlag >", value, "availableflag");
            return (Criteria) this;
        }

        public Criteria andAvailableflagGreaterThanOrEqualTo(Integer value) {
            addCriterion("availableFlag >=", value, "availableflag");
            return (Criteria) this;
        }

        public Criteria andAvailableflagLessThan(Integer value) {
            addCriterion("availableFlag <", value, "availableflag");
            return (Criteria) this;
        }

        public Criteria andAvailableflagLessThanOrEqualTo(Integer value) {
            addCriterion("availableFlag <=", value, "availableflag");
            return (Criteria) this;
        }

        public Criteria andAvailableflagIn(List<Integer> values) {
            addCriterion("availableFlag in", values, "availableflag");
            return (Criteria) this;
        }

        public Criteria andAvailableflagNotIn(List<Integer> values) {
            addCriterion("availableFlag not in", values, "availableflag");
            return (Criteria) this;
        }

        public Criteria andAvailableflagBetween(Integer value1, Integer value2) {
            addCriterion("availableFlag between", value1, value2, "availableflag");
            return (Criteria) this;
        }

        public Criteria andAvailableflagNotBetween(Integer value1, Integer value2) {
            addCriterion("availableFlag not between", value1, value2, "availableflag");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNull() {
            addCriterion("createTime is null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIsNotNull() {
            addCriterion("createTime is not null");
            return (Criteria) this;
        }

        public Criteria andCreatetimeEqualTo(Date value) {
            addCriterion("createTime =", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotEqualTo(Date value) {
            addCriterion("createTime <>", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThan(Date value) {
            addCriterion("createTime >", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeGreaterThanOrEqualTo(Date value) {
            addCriterion("createTime >=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThan(Date value) {
            addCriterion("createTime <", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeLessThanOrEqualTo(Date value) {
            addCriterion("createTime <=", value, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeIn(List<Date> values) {
            addCriterion("createTime in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotIn(List<Date> values) {
            addCriterion("createTime not in", values, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeBetween(Date value1, Date value2) {
            addCriterion("createTime between", value1, value2, "createtime");
            return (Criteria) this;
        }

        public Criteria andCreatetimeNotBetween(Date value1, Date value2) {
            addCriterion("createTime not between", value1, value2, "createtime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_note_book
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_note_book
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}